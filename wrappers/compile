#! /bin/sh
# Wrapper for compilers which do not understand '-c -o'.

scriptversion=2024-06-19.01; # UTC

# Copyright (C) 1999-2024 Free Software Foundation, Inc.
# Written by Tom Tromey <tromey@cygnus.com>.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# As a special exception to the GNU General Public License, if you
# distribute this file as part of a program that contains a
# configuration script generated by Autoconf, you may include it under
# the same distribution terms that you use for the rest of that program.

# This file is maintained in Automake, please report
# bugs to <bug-automake@gnu.org> or send patches to
# <automake-patches@gnu.org>.

nl='
'

# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent tools from complaining about whitespace usage.
IFS=" ""	$nl"

file_conv=

# func_file_conv build_file lazy
# Convert a $build file to $host form and store it in $file
# Currently only supports Windows hosts. If the determined conversion
# type is listed in (the comma separated) LAZY, no conversion will
# take place.
func_file_conv ()
{
  file=$1
  case $file in
    / | /[!/]*) # absolute file, and not a UNC file
      if test -z "$file_conv"; then
        # lazily determine how to convert abs files
        case `uname -s` in
          MINGW*)
            file_conv=mingw
            ;;
          CYGWIN* | MSYS*)
            file_conv=cygwin
            ;;
          *)
            file_conv=wine
            ;;
        esac
      fi
      case $file_conv/,$2, in
        *,$file_conv,*)
          ;;
        mingw/*)
          file=`cmd //C echo "$file " | sed -e 's/"\(.*\) " *$/\1/'`
          ;;
        cygwin/* | msys/*)
          file=`cygpath -m "$file" || echo "$file"`
          ;;
        wine/*)
          file=`winepath -w "$file" || echo "$file"`
          ;;
      esac
      ;;
  esac
}

# func_cl_dashL linkdir
# Make cl look for libraries in LINKDIR
func_cl_dashL ()
{
  func_file_conv "$1"
  if test -z "$lib_path"; then
    lib_path=$file
  else
    lib_path="$lib_path;$file"
  fi
  linker_opts="$linker_opts -LIBPATH:$file"
}

# func_cl_dashl library
# Do a library search-path lookup for cl
func_cl_dashl ()
{
  lib=$1
  found=no
  save_IFS=$IFS
  IFS=';'
  for dir in $lib_path $LIB
  do
    IFS=$save_IFS
    if $shared && test -f "$dir/$lib.dll.lib"; then
      found=yes
      lib=$dir/$lib.dll.lib
      break
    fi
    if test -f "$dir/$lib.lib"; then
      found=yes
      lib=$dir/$lib.lib
      break
    fi
    if test -f "$dir/lib$lib.a"; then
      found=yes
      lib=$dir/lib$lib.a
      break
    fi
  done
  IFS=$save_IFS

  if test "$found" != yes; then
    lib=$lib.lib
  fi
}

# func_cl_wrapper cl arg...
# Adjust compile command to suit cl
func_cl_wrapper ()
{
  # Assume a capable shell
  lib_path=
  shared=:
  linker_opts=
  compiler_version=
  for arg
  do
    if test -n "$eat"; then
      eat=
    else
      case $1 in
        -c99)
          set x "$@" "-std:c11"
          shift
          ;;
        --coverage)
          # TODO
          ;;
        --export-all-symbols)
          # TODO
          ;;
        -fanalyzer) 
          # TODO
          ;;
        -fdata-sections)
          # TODO
          ;;
        -fdiagnostics-color=always)
          # TODO
          ;;
        -fdiagnostics-show-option)
          # TODO
          ;;
        -ffast-math)
          # TODO
          ;;
        -ffp-contract=fast)
          set x "$@" "-fp:fast"
          shift
          ;;
        -ffp-contract=off)
          set x "$@" "-fp:strict"
          shift
          ;;
        -ffunction-sections)
          # TODO
          ;;
        -finline-functions)
          set x "$@" "-Ob2"
          shift
          ;;
        -flto)
          # TODO
          ;;
        -fno-analyzer)
          set x "$@" "-analyze-"
          shift
          ;;
        -fno-common)
          # TODO
          ;;
        -fno-inline)
          set x "$@" "-Ob0"
          shift
          ;;
        -fno-rtti)
          set x "$@" "-GR-"
          shift
          ;;
        -fno-threadsafe-statics)
          set x "$@" "-Zc:threadSafeInit-"
          shift
          ;;
        -fno-omit-frame-pointer)
          set x "$@" "-Oy-"
          shift
          ;;
        -fno-sized-deallocation)
          set x "$@" "-Zc:sizedDealloc-"
          shift
          ;;
        -fno-whole-program)
          set x "$@" "-GL-"
          shift
          ;;
        -fomit-frame-pointer)
          set x "$@" "-Oy"
          shift
          ;;
        -fopenmp)
          set x "$@" "-openmp"
          shift
          ;;
        -fpermissive)
          set x "$@" "-permissive"
          shift
          ;;
        -frtti)
          set x "$@" "-GR"
          shift
          ;;
        -fsanitize=undefined)
          # TODO
          ;;
        -fsigned-char)
          # TODO
          ;;
        -fsized-deallocation)
          set x "$@" "-Zc:sizedDealloc"
          shift
          ;;
        -fstack-check)
          set x "$@" "-GS"
          shift
          ;;
        -fstack-protector)
          set x "$@" "-GS"
          shift
          ;;
        -fstrict-flex-arrays)
          # TODO
          ;;
        -fthreadsafe-statics)
          set x "$@" "-Zc:threadSafeInit"
          shift
          ;;
        -ftrivial-auto-var-init=zero)
          # TODO
          ;;
        -fvisibility=hidden)
          # TODO
          ;;
        -funsigned-char)
          set x "$@" "-J"
          shift
          ;;
        -fwrapv)
          # TODO
          ;;
        -fwhole-program)
          set x "$@" "-GL"
          shift
          ;;
        -Fe)
          eat=1
          case $2 in
            *.dll)
              func_file_conv "$2"
              set x "$@" -LD -Fe"$file"
              shift
              ;;
            *.exe)
              func_file_conv "$2"
              set x "$@" -Fe"$file"
              shift
              ;;
            *)
              func_file_conv "$2"
              set x "$@" -Fe"$file"
              shift
              ;;
          esac
          ;;
        -g)
          set x "$@" "-Zi"
          shift
          ;;
        -mavx2)
          # TODO
          ;;
        -municode)
          # TODO
          ;;
        -mwindows)
          # TODO
          ;;
        -I | -include)
          eat=1
          func_file_conv "$2"
          set x "$@" -I"$file"
          shift
          ;;
        -I*)
          func_file_conv "${1#-I}"
          set x "$@" -I"$file"
          shift
          ;;
        -iquote.)
          # TODO
          ;;
        -l)
          eat=1
          func_cl_dashl "$2"
          set x "$@" "$lib"
          shift
          ;;
        -l*)
          func_cl_dashl "${1#-l}"
          set x "$@" "$lib"
          shift
          ;;
        -L)
          eat=1
          func_cl_dashL "$2"
          ;;
        -L*)
          func_cl_dashL "${1#-L}"
          ;;
        -n32)
          # TODO
          ;;
        --no-inline)
          # TODO
          ;;
        -no-undefined)
          # TODO
          ;;
        -O)
          # TODO
          ;;
        -o)
          # configure might choose to run compile as 'compile cc -o foo foo.c'.
          eat=1
          case $2 in
	          *.o | *.lo | *.[oO][bB][jJ])
              func_file_conv "$2"
              set x "$@" -Fo"$file"
              shift
              ;;
            *.dll)
              func_file_conv "$2"
              set x "$@" -LD -Fe"$file"
              shift
              ;;
            *.exe)
              func_file_conv "$2"
              set x "$@" -Fe"$file"
              shift
              ;;
            *)
              func_file_conv "$2"
              set x "$@" -Fe"$file"
              shift
              ;;
          esac
          ;;
        --out-implib)
          eat=1
          func_file_conv "$2"
          linker_opts="$linker_opts -implib:$file"
          ;;
        --out-implib=*)
          implib=${1#--out-implib=}
          func_file_conv "$implib"
          linker_opts="$linker_opts -implib:$file"
          ;;
        --output-def)
          eat=1
          func_file_conv "$2"
          if test -f "$file"; then
            linker_opts="$linker_opts -def:$file"
          fi
          ;;
        --output-def=*)
          def=${1#--output-def=}
          if test -f "$def"; then
            func_file_conv "$def"
            linker_opts="$linker_opts -def:$file"
          fi
          ;;
        -pedantic)
          set x "$@" "-Wall"
          shift
          ;;
        -qversion)
          # TODO
          compiler_version=1
          ;;
        -shared)
          shared=true
          ;;
        -static)
          shared=false
          ;;
        -std=*)
          arg=${1#-std=}
          case $arg in
            gnu11 | c11 | gnu99 | c99)
              set x "$@" "-std:c11"
              shift
              ;;
            gnu17 | c17)
              set x "$@" "-std:c17"
              shift
              ;;
            gnu++98 | gnu++11 | c++11 | gnu++14 | c++14)
              set x "$@" "-std:c++14"
              shift
              ;;
            gnu++17 | c++17)
              set x "$@" "-std:c++17"
              shift
              ;;
            gnu++20 | c++20)
              set x "$@" "-std:c++20"
              shift
              ;;
            *)
              ;;
          esac
          ;;
        -S)
          # TODO
          ;;
        -v | -V | -version | --version)
          # TODO
          compiler_version=1
          ;;
        -Wl,*)
          implib_option=
          def_option=
          dll_option=
          arg=${1#-Wl,}
          save_ifs="$IFS"; IFS=','
          for flag in $arg; do
            IFS="$save_ifs"
            case $flag in
              --enable-auto-image-base)
                # TODO
                ;;
              --enable-auto-import)
                # TODO
                ;;
              --export-all)
                # TODO
                ;;
              --export-all-symbols)
                # TODO
                ;;
              --gc-sections)
                # TODO
                ;;
              --no-whole-archive)
                # TODO
                ;;
              --whole-archive)
                linker_opts="$linker_opts -wholearchive"
                ;;
              --out-implib)
                implib_option=1
                ;;
              --out-implib=*)
                implib=${flag#--out-implib=}
                func_file_conv "$implib"
                linker_opts="$linker_opts -implib:$file"
                ;;
              --output-def)
                def_option=1
                ;;
              --output-def=*)
                # FIXME:
                # msvc don't support to generate .def from linker, but use this option
                # for those library hasn't use libtool to generate .def/.exp
                def=${flag#--output-def=}
                if test -f "$def"; then
                  func_file_conv "$def"
                  linker_opts="$linker_opts -def:$file"
                fi
                ;;
              --version-script=*)
                # ignore, because MSVC doesn't support to specify the name of a
                # version script to the linker
                ;;
              -DLL)
                dll_option=1
                ;;
              -IMPLIB:*)
                if test -n "$dll_option"; then
                  implib=${flag#-IMPLIB:}
                  func_file_conv "$implib"
                  linker_opts="$linker_opts -implib:$file"
                fi
                ;;
              -no-undefined)
                # TODO
                ;;
              *)
                if test -n "$def_option"; then
                  if test -f "$flag"; then
                    func_file_conv "$flag"
                    linker_opts="$linker_opts -def:$file"
                  fi
                elif test -n "$implib_option"; then
                  func_file_conv "$flag"
                  linker_opts="$linker_opts -implib:$file"
                else
                  linker_opts="$linker_opts $flag"
                fi
                ;;
            esac
          done
          IFS="$save_ifs"
          ;;
        -warn)
          # TODO
          eat=1
          ;;
        -W)
          # TODO
          ;;
        -Wall)
          set x "$@" "-W3"
          shift
          ;;
        -Wbad-function-cast)
          # TODO
          ;;
        -Wcast-align)
          # TODO
          ;;
        -Wcomment)
          # TODO
          ;;
        -Wextra)
          set x "$@" "-Wall"
          shift
          ;;
        -Werror)
          set x "$@" "-WX"
          shift
          ;;
        -Werror=*)
          arg=${1#-Werror=}
          case $arg in
            attributes)
              # TODO
              ;;
            implicit)
              # TODO
              ;;
            missing-braces)
              # TODO
              ;;
            missing-declarations)
              # TODO
              ;;
            missing-prototypes)
              # TODO
              ;;
            pointer-arith)
              # TODO
              ;;
            return-type)
              # TODO
              ;;
            strict-prototypes)
              # TODO
              ;;
            trigraphs)
              # TODO
              ;;
            unknown-warning-option)
              # TODO
              ;;
            *)
              ;;
          esac
          ;;
        -Wformat)
          # TODO
          ;;
        -Wimplicit-function-declaration)
          # TODO
          ;;
        -Wmissing-declarations)
          # TODO
          ;;
        -Wmissing-prototypes)
          # TODO
          ;;
        -Wnested-externs)
          # TODO
          ;;
        -Wno-pedantic-ms-format)
          # TODO
          ;;
        -Wno-unused-parameter)
          # TODO
          ;;
        -Wno-unused-function)
          # TODO
          ;;
        -Wpacked)
          # TODO
          ;;
        -Wpointer-arith)
          # TODO
          ;;
        -Wredundant-decls)
          # TODO
          ;;
        -Wshadow)
          # TODO
          ;;
        -Wstrict-prototypes)
          # TODO
          ;;
        -Wunused-macros)
          # TODO
          ;;
        -Wundef)
          # TODO
          ;;
        -Wwrite-strings)
          # TODO
          ;;
        -Xlinker)
          eat=1
          linker_opts="$linker_opts $2"
          ;;
        -*)
          set x "$@" "$1"
          shift
          ;;
        *.cc | *.CC | *.cxx | *.CXX | *.[cC]++)
          func_file_conv "$1"
          set x "$@" -Tp"$file"
          shift
          ;;
        *.c | *.cpp | *.CPP | *.lib | *.LIB | *.Lib | *.OBJ | *.obj | *.[oO])
          func_file_conv "$1"
          set x "$@" "$file"
          shift
          ;;
        *)
          set x "$@" "$1"
          shift
          ;;
      esac
    fi
    shift
  done
  if test -n "$linker_opts"; then
    linker_opts="-link$linker_opts"
  fi
  if test -n "$compiler_version"; then
    exec $1
  else
    exec "$@" $linker_opts
  fi
  exit 1
}

eat=

case $1 in
  '')
     echo "$0: No command.  Try '$0 --help' for more information." 1>&2
     exit 1;
     ;;
  -h | --h*)
    cat <<\EOF
Usage: compile [--help] [--version] PROGRAM [ARGS]

Wrapper for compilers which do not understand '-c -o'.
Remove '-o dest.o' from ARGS, run PROGRAM with the remaining
arguments, and rename the output as expected.

If you are trying to build a whole package this is not the
right script to run: please start by reading the file 'INSTALL'.

Report bugs to <bug-automake@gnu.org>.
GNU Automake home page: <https://www.gnu.org/software/automake/>.
General help using GNU software: <https://www.gnu.org/gethelp/>.
EOF
    exit $?
    ;;
  -v | --v*)
    echo "compile (GNU Automake) $scriptversion"
    exit $?
    ;;
  cl | *[/\\]cl | cl.exe | *[/\\]cl.exe | \
  clang-cl | *[/\\]clang-cl | clang-cl.exe | *[/\\]clang-cl.exe | \
  icl | *[/\\]icl | icl.exe | *[/\\]icl.exe )
    func_cl_wrapper "$@"      # Doesn't return...
    ;;
esac

ofile=
cfile=

for arg
do
  if test -n "$eat"; then
    eat=
  else
    case $1 in
      -o)
        # configure might choose to run compile as 'compile cc -o foo foo.c'.
        # So we strip '-o arg' only if arg is an object.
        eat=1
        case $2 in
          *.o | *.obj)
            ofile=$2
            ;;
          *.dll)
            dllfile=$2
            ;;
          *)
            set x "$@" -o "$2"
            shift
            ;;
        esac
        ;;
      *.c)
        cfile=$1
        set x "$@" "$1"
        shift
        ;;
      *)
        set x "$@" "$1"
        shift
        ;;
    esac
  fi
  shift
done

if test -z "$ofile" || test -z "$cfile" || test -z "$dllfile"; then
  # If no '-o' option was seen then we might have been invoked from a
  # pattern rule where we don't need one.  That is ok -- this is a
  # normal compilation that the losing compiler can handle.  If no
  # '.c' file was seen then we are probably linking.  That is also
  # ok.
  exec "$@"
fi

# Name of file we expect compiler to create.
cofile=`echo "$cfile" | sed 's|^.*[\\/]||; s|^[a-zA-Z]:||; s/\.c$/.o/'`

# Create the lock directory.
# Note: use '[/\\:.-]' here to ensure that we don't use the same name
# that we are using for the .o file.  Also, base the name on the expected
# object file name, since that is what matters with a parallel build.
lockdir=`echo "$cofile" | sed -e 's|[/\\:.-]|_|g'`.d
while true; do
  if mkdir "$lockdir" >/dev/null 2>&1; then
    break
  fi
  sleep 1
done
# FIXME: race condition here if user kills between mkdir and trap.
trap "rmdir '$lockdir'; exit 1" 1 2 15

# Run the compile.
"$@"
ret=$?

if test -f "$cofile"; then
  test "$cofile" = "$ofile" || mv "$cofile" "$ofile"
elif test -f "${cofile}bj"; then
  test "${cofile}bj" = "$ofile" || mv "${cofile}bj" "$ofile"
fi

rmdir "$lockdir"
exit $ret

# Local Variables:
# mode: shell-script
# sh-indentation: 2
# eval: (add-hook 'before-save-hook 'time-stamp)
# time-stamp-start: "scriptversion="
# time-stamp-format: "%:y-%02m-%02d.%02H"
# time-stamp-time-zone: "UTC0"
# time-stamp-end: "; # UTC"
# End:
