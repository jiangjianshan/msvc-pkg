diff -urN CHiPPS-BiCePS-0.94.9-orig/Bcps/bcps.pc.in CHiPPS-BiCePS-0.94.9/Bcps/bcps.pc.in
--- CHiPPS-BiCePS-0.94.9-orig/Bcps/bcps.pc.in	2024-03-27 20:57:33.000000000 +0800
+++ CHiPPS-BiCePS-0.94.9/Bcps/bcps.pc.in	2025-03-20 16:21:46.775284800 +0800
@@ -1,12 +1,12 @@
 prefix=@prefix@
 exec_prefix=@exec_prefix@
 libdir=@libdir@
-includedir=@includedir@/coin
+includedir=@includedir@/coin-or
 
 Name: BCPS
 Description: Branch, Constrain, and Price Software Fraework
 URL: https://projects.coin-or.org/CHiPPS
 Version: @PACKAGE_VERSION@
-Libs: -L${libdir} -lBcps @BCPSLIB_PCLIBS@
+Libs: -L${libdir} -lBcps @BCPSLIB_LFLAGS@
 Cflags: -I${includedir}
-Requires: @BCPSLIB_PCREQUIRES@
+Requires: @BCPSLIB_PCFILES@
diff -urN CHiPPS-BiCePS-0.94.9-orig/Bcps/bcps-uninstalled.pc.in CHiPPS-BiCePS-0.94.9/Bcps/bcps-uninstalled.pc.in
--- CHiPPS-BiCePS-0.94.9-orig/Bcps/bcps-uninstalled.pc.in	2024-03-27 20:57:33.000000000 +0800
+++ CHiPPS-BiCePS-0.94.9/Bcps/bcps-uninstalled.pc.in	2025-03-20 16:21:46.775284800 +0800
@@ -6,6 +6,6 @@
 Description: Branch, Constrain, and Price Software Fraework
 URL: https://projects.coin-or.org/CHiPPS
 Version: @PACKAGE_VERSION@
-Libs: ${libdir}/libBcps.la @BCPSLIB_PCLIBS@
+Libs: ${libdir}/libBcps.la @BCPSLIB_LFLAGS@
 Cflags: -I@abs_source_dir@/src -I@ABSBUILDDIR@/src
-Requires: @BCPSLIB_PCREQUIRES@
+Requires: @BCPSLIB_PCFILES@
diff -urN CHiPPS-BiCePS-0.94.9-orig/Bcps/configure.ac CHiPPS-BiCePS-0.94.9/Bcps/configure.ac
--- CHiPPS-BiCePS-0.94.9-orig/Bcps/configure.ac	2024-03-27 20:57:33.000000000 +0800
+++ CHiPPS-BiCePS-0.94.9/Bcps/configure.ac	2025-03-21 19:48:21.688092700 +0800
@@ -70,19 +70,10 @@
 #                         Standard build tool stuff                         #
 #############################################################################
 
-# Get the system type
-AC_CANONICAL_BUILD
+# Do some initialization work (version numbers, change prefix default, ...)
+AC_COIN_INITIALIZE
 
-# If this project depends on external projects, the Externals file in
-# the source root directory contains definition of where to find those
-# externals.  The following macro ensures that those externals are
-# retrieved by svn if they are not there yet.
-AC_COIN_PROJECTDIR_INIT(Bcps,8:9:7)
-
-# Check if user wants to produce debugging code
-AC_COIN_DEBUG_COMPILE(Bcps)
-
-# Get the name of the C++ compiler and appropriate compiler options
+# Get the name of the C++ compiler and appropriate compiler options.
 AC_COIN_PROG_CXX
 
 # We filter out the -pedantic-errors flag for C and C++ compiler in
@@ -93,18 +84,18 @@
   CXXFLAGS=`echo $CXXFLAGS | sed -e s/-pedantic-errors//g`
 fi
 
-# Initialize automake and libtool
-AC_COIN_INIT_AUTO_TOOLS
+# Initialize libtool
+AC_COIN_PROG_LIBTOOL
 
 #############################################################################
 #                              COIN components                              #
 #############################################################################
 
-AC_COIN_CHECK_PACKAGE(Alps, [alps], [BcpsLib])
+AC_COIN_CHK_PKG(Alps,[BcpsLib],[alps])
 if test $coin_has_alps != yes ; then
   AC_MSG_ERROR([Required package Alps not available.])
 fi
-AC_COIN_CHECK_PACKAGE(Clp, [cgl osi-clp], [Abc])
+AC_COIN_CHK_PKG(Clp,[Abc],[cgl osi-clp])
 
 ##############################################################################
 #                   VPATH links for example input files                      #
@@ -112,7 +103,7 @@
 
 # In this case, the source code is taken from the Bcps examples directory
 
-AC_CONFIG_LINKS(test/BlisBranchObjectInt.cpp:examples/Blis/BlisBranchObjectInt.cpp
+AC_COIN_VPATH_LINK(test/BlisBranchObjectInt.cpp:examples/Blis/BlisBranchObjectInt.cpp
 	test/BlisBranchObjectInt.h:examples/Blis/BlisBranchObjectInt.h
 	test/BlisBranchStrategyPseudo.cpp:examples/Blis/BlisBranchStrategyPseudo.cpp
 	test/BlisBranchStrategyPseudo.h:examples/Blis/BlisBranchStrategyPseudo.h
@@ -180,7 +171,10 @@
 AC_CONFIG_FILES([doxydoc/doxygen.conf])
 
 # Here put the location and name of the configuration header file
-AC_CONFIG_HEADER([src/config.h src/config_bcps.h])
+AC_CONFIG_HEADERS([src/config.h src/config_bcps.h])
+
+# Finalize libs and cflags.
+AC_COIN_FINALIZE_FLAGS([BcpsLib Abc])
 
 # Finally, we let configure write all the output...
 AC_COIN_FINALIZE
diff -urN CHiPPS-BiCePS-0.94.9-orig/Bcps/Makefile.am CHiPPS-BiCePS-0.94.9/Bcps/Makefile.am
--- CHiPPS-BiCePS-0.94.9-orig/Bcps/Makefile.am	2024-03-27 20:57:33.000000000 +0800
+++ CHiPPS-BiCePS-0.94.9/Bcps/Makefile.am	2025-03-20 16:21:46.775284800 +0800
@@ -132,7 +132,6 @@
 #                  Installation of the addlibs file                    #
 ########################################################################
 
-pkgconfiglibdir = $(libdir)/pkgconfig
 pkgconfiglib_DATA = bcps.pc
 
 addlibsdir = $(DESTDIR)$(datadir)/coin/doc/Bcps
@@ -143,12 +142,8 @@
 	PKG_CONFIG_PATH=@COIN_PKG_CONFIG_PATH@:$(DESTDIR)$(pkgconfiglibdir) \
 	$(PKG_CONFIG) --libs bcps > $(addlibsdir)/bcps_addlibs.txt
 else
-if COIN_CXX_IS_CL
-	echo "-libpath:`$(CYGPATH_W) @abs_lib_dir@` libBcps.lib @BCPSLIB_LIBS_INSTALLED@" > $(addlibsdir)/bcps_addlibs.txt
-else
 	echo -L@abs_lib_dir@ -lBcps @BCPSLIB_LIBS_INSTALLED@ > $(addlibsdir)/bcps_addlibs.txt
 endif
-endif
 
 uninstall-hook:
 	rm -f $(addlibsdir)/bcps_addlibs.txt
diff -urN CHiPPS-BiCePS-0.94.9-orig/Bcps/src/Makefile.am CHiPPS-BiCePS-0.94.9/Bcps/src/Makefile.am
--- CHiPPS-BiCePS-0.94.9-orig/Bcps/src/Makefile.am	2024-03-27 20:57:33.000000000 +0800
+++ CHiPPS-BiCePS-0.94.9/Bcps/src/Makefile.am	2025-03-20 16:21:46.790906000 +0800
@@ -50,9 +50,7 @@
 	BcpsTreeNode.h
 
 # List all additionally required libraries
-if DEPENDENCY_LINKING
-libBcps_la_LIBADD = $(BCPSLIB_LIBS)
-endif
+libBcps_la_LIBADD = $(BCPSLIB_LFLAGS)
 
 # This is for libtool (on Windows)
 libBcps_la_LDFLAGS = $(LT_LDFLAGS)
@@ -63,19 +61,15 @@
 
 # Here list all include flags, relative to this "srcdir" directory.  This
 # "cygpath" stuff is necessary to compile with native compilers on Windows.
-AM_CPPFLAGS = $(BCPSLIB_CFLAGS)
-
-# This line is necessary to allow VPATH compilation with MS compilers
-# on Cygwin
-DEFAULT_INCLUDES = -I. -I`$(CYGPATH_W) $(srcdir)` -I$(top_builddir)/inc
+AM_CPPFLAGS = $(BCPSLIB_CFLAGS) -I. -I`$(CYGPATH_W) $(srcdir)` -I$(top_builddir)/inc
 
 ########################################################################
 #                Headers that need to be installed                     #
 ########################################################################
 
 # Here list all the header files that are required by a user of the library,
-# and that therefore should be installed in 'include/coin'
-includecoindir = $(includedir)/coin
+# and that therefore should be installed in 'include/coin-or'
+includecoindir = $(includedir)/coin-or
 includecoin_HEADERS = \
 	Bcps.h \
 	BcpsBranchObject.h \
diff -urN CHiPPS-BiCePS-0.94.9-orig/Bcps/test/Makefile.am CHiPPS-BiCePS-0.94.9/Bcps/test/Makefile.am
--- CHiPPS-BiCePS-0.94.9-orig/Bcps/test/Makefile.am	2024-03-27 20:57:33.000000000 +0800
+++ CHiPPS-BiCePS-0.94.9/Bcps/test/Makefile.am	2025-03-20 16:21:46.790906000 +0800
@@ -62,13 +62,10 @@
 # Here list all include flags, relative to this "srcdir" directory.  This
 # "cygpath" stuff is necessary to compile with native compilers on Cygwin
 AM_CPPFLAGS = -I`$(CYGPATH_W) $(srcdir)/../src` \
+        -I. -I`$(CYGPATH_W) $(srcdir)` \
         $(ABC_CFLAGS) \
         $(BCPSLIB_CFLAGS)
 
-# This line is necessary to allow VPATH compilation with MS compilers
-# on Cygwin
-DEFAULT_INCLUDES = -I. -I`$(CYGPATH_W) $(srcdir)` 
-
 test: unitTest$(EXEEXT)
 	./unitTest$(EXEEXT) -Alps_instance ./flugpl.mps
 
