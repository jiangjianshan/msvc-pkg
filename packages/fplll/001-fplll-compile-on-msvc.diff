diff -urN fplll-5.5.0-orig/fplll/defs.h fplll-5.5.0/fplll/defs.h
--- fplll-5.5.0-orig/fplll/defs.h	2024-11-12 17:49:46.000000000 +0800
+++ fplll-5.5.0/fplll/defs.h	2025-01-06 13:23:00.660503200 +0800
@@ -26,7 +26,9 @@
 #define FPLLL_WITH_DPE
 #define FPLLL_WITH_ZDOUBLE
 #define FPLLL_WITH_ZLONG
+#ifndef _MSC_VER
 #define FPLLL_WITH_GETRUSAGE
+#endif
 
 #include <algorithm>
 #include <climits>
diff -urN fplll-5.5.0-orig/fplll/enum/enumerate_base.h fplll-5.5.0/fplll/enum/enumerate_base.h
--- fplll-5.5.0-orig/fplll/enum/enumerate_base.h	2024-11-12 17:49:46.000000000 +0800
+++ fplll-5.5.0/fplll/enum/enumerate_base.h	2025-01-06 13:23:00.664508600 +0800
@@ -19,7 +19,7 @@
 #ifndef FPLLL_ENUMERATE_BASE_H
 #define FPLLL_ENUMERATE_BASE_H
 
-#include "../fplll_config.h"
+#include "fplll/fplll_config.h"
 #include "../nr/nr.h"
 #include "./enumerate_ext_api.h"
 #include <array>
diff -urN fplll-5.5.0-orig/fplll/nr/nr_rand.inl fplll-5.5.0/fplll/nr/nr_rand.inl
--- fplll-5.5.0-orig/fplll/nr/nr_rand.inl	2024-11-12 17:49:46.000000000 +0800
+++ fplll-5.5.0/fplll/nr/nr_rand.inl	2025-01-06 13:23:00.668701900 +0800
@@ -7,6 +7,10 @@
 #ifndef FPLLL_NR_RAND_H
 #define FPLLL_NR_RAND_H
 
+#if defined _WIN32 && ! defined __CYGWIN__
+#include <Windows.h>
+#endif
+
 FPLLL_BEGIN_NAMESPACE
 
 class RandGen
@@ -31,7 +35,24 @@
   {
     init();
     struct timeval time;
+#ifdef HAVE_GETTIMEOFDAY
     gettimeofday(&time, NULL);
+#else
+    FILETIME current_time;
+    GetSystemTimeAsFileTime (&current_time);
+    /* Convert from FILETIME to 'struct timeval'.  */
+    /* FILETIME: <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ns-minwinbase-filetime> */
+    ULONGLONG since_1601 =
+      ((ULONGLONG) current_time.dwHighDateTime << 32)
+      | (ULONGLONG) current_time.dwLowDateTime;
+    /* Between 1601-01-01 and 1970-01-01 there were 280 normal years and 89 leap
+       years, in total 134774 days.  */
+    ULONGLONG since_1970 =
+      since_1601 - (ULONGLONG) 134774 * (ULONGLONG) 86400 * (ULONGLONG) 10000000;
+    ULONGLONG microseconds_since_1970 = since_1970 / (ULONGLONG) 10;
+    time.tv_sec  = microseconds_since_1970 / (ULONGLONG) 1000000;
+    time.tv_usec = microseconds_since_1970 % (ULONGLONG) 1000000;
+#endif
     gmp_randseed_ui(gmp_state, (time.tv_sec * 1000) + (time.tv_usec / 1000));
   }
   static bool get_initialized() { return initialized; }
diff -urN fplll-5.5.0-orig/fplll/pruner/pruner_optimize.cpp fplll-5.5.0/fplll/pruner/pruner_optimize.cpp
--- fplll-5.5.0-orig/fplll/pruner/pruner_optimize.cpp	2024-11-12 17:49:46.000000000 +0800
+++ fplll-5.5.0/fplll/pruner/pruner_optimize.cpp	2025-01-06 13:26:43.321531500 +0800
@@ -87,7 +87,11 @@
 #endif
 
       // break if not improving
+#ifdef _MSC_VER
+      if (new_c / old_c0 > 0.995 && tours > NUM_OPTIMIZATION_TOURS)
+#else
       if (new_c / old_c0 > 0.995 and tours > NUM_OPTIMIZATION_TOURS)
+#endif
         break;
     }
     save_coefficients(pr, best_b);
