diff -urN spral-2025.03.06-orig/configure.ac spral-2025.03.06/configure.ac
--- spral-2025.03.06-orig/configure.ac	2025-03-06 16:53:00.000000000 +0800
+++ spral-2025.03.06/configure.ac	2025-03-15 15:29:14.475786700 +0800
@@ -33,7 +33,7 @@
 AC_PROG_CXX
 AC_PROG_F77
 AC_PROG_FC
-AC_PROG_RANLIB
+LT_INIT
 
 # Add OpenMP support
 AS_IF([test "x$enable_openmp" != "xno"], [
diff -urN spral-2025.03.06-orig/Makefile.am spral-2025.03.06/Makefile.am
--- spral-2025.03.06-orig/Makefile.am	2025-03-06 16:53:00.000000000 +0800
+++ spral-2025.03.06/Makefile.am	2025-03-15 15:52:34.638197900 +0800
@@ -8,7 +8,7 @@
 if HAVE_OPENMP
 OPENMP_LIB = -Xcompiler="$(OPENMP_CXXFLAGS)"
 else
-OPENMP_LIB = #-lgomp # FIXME: autoconf this
+OPENMP_LIB =
 endif
 if HAVE_GPUDBG
 AM_NVCC_FLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/src -Xptxas="${PTX_FLAGS}" -G -src-in-ptx
@@ -26,11 +26,13 @@
 AM_NVCC_FLAGS += -gencode arch=compute_86,code=sm_86
 AM_NVCC_FLAGS += -gencode arch=compute_87,code=sm_87
 AM_NVCC_FLAGS += -gencode arch=compute_86,code=compute_86
-AM_LD_FLAGS = -lcuda
-NVCCLINK = \
-	$(NVCC) $(NVCCFLAGS) $(AM_NVCC_FLAGS) $(AM_LD_FLAGS) $(LDFLAGS) $(OPENMP_LIB) -o $@
+
 .cu.o:
-	$(NVCC) $(NVCCFLAGS) $(AM_NVCC_FLAGS) -rdc false -c -o $@ $<
+	$(NVCC) $(NVCCFLAGS) $(AM_NVCC_FLAGS) -c -o $@ $<
+.cu.obj:
+	$(NVCC) $(NVCCFLAGS) $(AM_NVCC_FLAGS) -c -o $@ $<
+.cu.lo:
+	$(LIBTOOL) --mode=compile --tag=CC $(NVCC) $(NVCCFLAGS) $(AM_NVCC_FLAGS) -c -o $@ $<
 
 # Include directory for standard C
 AM_CFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/src $(OPENMP_CFLAGS) \
@@ -41,16 +43,14 @@
 
 # FIXME: make below configurable
 if HAVE_NVCC
-LDADD = -L. -lspral $(METIS_LIBS) $(LAPACK_LIBS) $(BLAS_LIBS) $(GTG_LIBS) -L$(CUDA_HOME)/lib64 $(HWLOC_LIBS) $(FCLIBS)
-SPRAL_LINK_LIBS = -lcublas
-SPRALLINK = $(NVCCLINK)
+SPRAL_LINK_LIBS = -lcuda -lcublas -lcudart
 else
-LDADD = -L. -lspral $(METIS_LIBS) $(LAPACK_LIBS) $(BLAS_LIBS) $(GTG_LIBS) $(HWLOC_LIBS) $(FCLIBS)
 SPRAL_LINK_LIBS = $(CXXLIB)
-SPRALLINK = $(FCLINK)
 endif
 
-lib_LIBRARIES = libspral.a
+lib_LTLIBRARIES = libspral.la
+libspral_la_LIBADD = $(METIS_LIBS) $(LAPACK_LIBS) $(BLAS_LIBS) $(GTG_LIBS) $(HWLOC_LIBS) $(FCLIBS) $(SPRAL_LINK_LIBS)
+
 # Note: first so not +=
 include_HEADERS = \
    include/spral.h \
@@ -58,42 +58,42 @@
 
 # BLAS_IFACE
 # Note: first so not +=
-libspral_a_SOURCES = \
+libspral_la_SOURCES = \
 	src/blas_iface.f90
 
 # CORE_ANALYSE
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/core_analyse.f90
 
 # COMPAT (compatability header)
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
    src/compat.cxx
 
 # CUDA
 if HAVE_NVCC
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/cuda/api_wrappers.cu \
 	src/cuda/cuda.f90 \
 	src/cuda/cuda_check.h
 else
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/cuda/cuda_nocuda.f90
 endif
 
 # HW_TOPOLOGY
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
    src/hw_topology/hw_topology.f90 \
 	src/hw_topology/guess_topology.cxx \
 	src/hw_topology/guess_topology.hxx \
 	src/hw_topology/hwloc_wrapper.hxx
 
 # LAPACK_IFACE
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/lapack_iface.f90
 
 # LSMR
 include_HEADERS += include/spral_lsmr.h
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/lsmr.f90 \
 	interfaces/C/lsmr.f90
 check_PROGRAMS = \
@@ -102,38 +102,38 @@
 	examples/C/lsmr
 lsmr_test_SOURCES = tests/lsmr.f90
 examples_Fortran_lsmr_SOURCES = examples/Fortran/lsmr.f90
-tests/lsmr.$(OBJEXT): libspral.a
-examples/C/lsmr.$(OBJEXT): libspral.a
-examples/Fortran/lsmr.$(OBJEXT): libspral.a
+tests/lsmr.$(OBJEXT): libspral.la
+examples/C/lsmr.$(OBJEXT): libspral.la
+examples/Fortran/lsmr.$(OBJEXT): libspral.la
 TESTS = lsmr_test
 
 # MATCH_ORDER
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/match_order.f90
 
 # MATRIX_UTIL
 include_HEADERS += include/spral_matrix_util.h
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/matrix_util.f90 \
 	interfaces/C/matrix_util.f90
 
 # METIS_WRAPPER
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/metis$(METIS_VERSION)_wrapper.F90
 EXTRA_DIST = src/metis4_wrapper.F90 src/metis5_wrapper.F90
 
 # OMP
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/omp.cxx \
 	src/omp.hxx
 
 # PGM
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/pgm.f90
 
 # RUTHERFORD_BOEING
 include_HEADERS += include/spral_rutherford_boeing.h
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/rutherford_boeing.f90 \
 	interfaces/C/rutherford_boeing.f90
 check_PROGRAMS += \
@@ -151,16 +151,16 @@
 	examples/C/rutherford_boeing/rb_read.c
 examples_C_rutherford_boeing_rb_write_SOURCES = \
 	examples/C/rutherford_boeing/rb_write.c
-tests/rutherford_boeing.$(OBJEXT): libspral.a
-examples/Fortran/rutherford_boeing/rb_read.$(OBJEXT): libspral.a
-examples/Fortran/rutherford_boeing/rb_write.$(OBJEXT): libspral.a
-examples/C/rutherford_boeing/rb_read.$(OBJEXT): libspral.a
-examples/C/rutherford_boeing/rb_write.$(OBJEXT): libspral.a
+tests/rutherford_boeing.$(OBJEXT): libspral.la
+examples/Fortran/rutherford_boeing/rb_read.$(OBJEXT): libspral.la
+examples/Fortran/rutherford_boeing/rb_write.$(OBJEXT): libspral.la
+examples/C/rutherford_boeing/rb_read.$(OBJEXT): libspral.la
+examples/C/rutherford_boeing/rb_write.$(OBJEXT): libspral.la
 TESTS += rutherford_boeing_test
 
 # SCALING
 include_HEADERS += include/spral_scaling.h
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/scaling.f90 \
 	interfaces/C/scaling.f90
 check_PROGRAMS += \
@@ -190,28 +190,28 @@
 examples_C_scaling_equilib_unsym_SOURCES = examples/C/scaling/equilib_unsym.c
 examples_C_scaling_hungarian_sym_SOURCES = examples/C/scaling/hungarian_sym.c
 examples_C_scaling_hungarian_unsym_SOURCES = examples/C/scaling/hungarian_unsym.c
-tests/scaling.$(OBJEXT): libspral.a
-examples/Fortran/scaling/auction_sym.$(OBJEXT): libspral.a
-examples/Fortran/scaling/auction_unsym.$(OBJEXT): libspral.a
-examples/Fortran/scaling/equilib_sym.$(OBJEXT): libspral.a
-examples/Fortran/scaling/equilib_unsym.$(OBJEXT): libspral.a
-examples/Fortran/scaling/hungarian_sym.$(OBJEXT): libspral.a
-examples/Fortran/scaling/hungarian_unsym.$(OBJEXT): libspral.a
-examples/C/scaling/auction_sym.$(OBJEXT): libspral.a
-examples/C/scaling/auction_unsym.$(OBJEXT): libspral.a
-examples/C/scaling/equilib_sym.$(OBJEXT): libspral.a
-examples/C/scaling/equilib_unsym.$(OBJEXT): libspral.a
-examples/C/scaling/hungarian_sym.$(OBJEXT): libspral.a
-examples/C/scaling/hungarian_unsym.$(OBJEXT): libspral.a
+tests/scaling.$(OBJEXT): libspral.la
+examples/Fortran/scaling/auction_sym.$(OBJEXT): libspral.la
+examples/Fortran/scaling/auction_unsym.$(OBJEXT): libspral.la
+examples/Fortran/scaling/equilib_sym.$(OBJEXT): libspral.la
+examples/Fortran/scaling/equilib_unsym.$(OBJEXT): libspral.la
+examples/Fortran/scaling/hungarian_sym.$(OBJEXT): libspral.la
+examples/Fortran/scaling/hungarian_unsym.$(OBJEXT): libspral.la
+examples/C/scaling/auction_sym.$(OBJEXT): libspral.la
+examples/C/scaling/auction_unsym.$(OBJEXT): libspral.la
+examples/C/scaling/equilib_sym.$(OBJEXT): libspral.la
+examples/C/scaling/equilib_unsym.$(OBJEXT): libspral.la
+examples/C/scaling/hungarian_sym.$(OBJEXT): libspral.la
+examples/C/scaling/hungarian_unsym.$(OBJEXT): libspral.la
 TESTS += scaling_test
 
 # TIMER
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/timer.f90
 
 # RANDOM
 include_HEADERS += include/spral_random.h
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/random.f90 \
 	interfaces/C/random.f90
 check_PROGRAMS += \
@@ -221,14 +221,14 @@
 random_test_SOURCES = tests/random.f90
 examples_Fortran_random_SOURCES = examples/Fortran/random.f90
 examples_C_random_SOURCES = examples/C/random.c
-tests/random.$(OBJEXT): libspral.a
-examples/Fortran/random.$(OBJEXT): libspral.a
-examples/C/random.$(OBJEXT): libspral.a
+tests/random.$(OBJEXT): libspral.la
+examples/Fortran/random.$(OBJEXT): libspral.la
+examples/C/random.$(OBJEXT): libspral.la
 TESTS += random_test
 
 # RANDOM_MATRIX
 include_HEADERS += include/spral_random_matrix.h
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/random_matrix.f90 \
 	interfaces/C/random_matrix.f90
 check_PROGRAMS += \
@@ -238,15 +238,15 @@
 random_matrix_test_SOURCES = tests/random_matrix.f90
 examples_Fortran_random_matrix_SOURCES = examples/Fortran/random_matrix.f90
 examples_C_random_matrix_SOURCES = examples/C/random_matrix.c
-tests/random_matrix.$(OBJEXT): libspral.a
-examples/Fortran/random_matrix.$(OBJEXT): libspral.a
-examples/C/random_matrix.$(OBJEXT): libspral.a
+tests/random_matrix.$(OBJEXT): libspral.la
+examples/Fortran/random_matrix.$(OBJEXT): libspral.la
+examples/C/random_matrix.$(OBJEXT): libspral.la
 TESTS += random_matrix_test
 
 # SSIDS
 include_HEADERS += include/spral_ssids.h
 if HAVE_NVCC
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/ssids/gpu/alloc.f90 \
 	src/ssids/gpu/cpu_solve.f90 \
 	src/ssids/gpu/datatypes.f90 \
@@ -264,10 +264,10 @@
 	src/ssids/gpu/kernels/solve.cu \
 	src/ssids/gpu/kernels/syrk.cu
 else
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/ssids/gpu/subtree_no_cuda.f90
 endif
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/ssids/akeep.f90 \
 	src/ssids/anal.f90 \
 	src/ssids/contrib.f90 \
@@ -347,24 +347,20 @@
 									 tests/ssids/kernels/ldlt_tpp.cxx \
 									 tests/ssids/kernels/ldlt_tpp.hxx
 examples_Fortran_ssids_SOURCES = examples/Fortran/ssids.f90
-examples/Fortran/ssids.$(OBJEXT): libspral.a
+examples/Fortran/ssids.$(OBJEXT): libspral.la
 examples_C_ssids_SOURCES = examples/C/ssids.c
-tests/ssids/ssids.$(OBJEXT): libspral.a
-tests/ssids/kernels.$(OBJEXT): libspral.a
-examples/C/ssids.$(OBJEXT): libspral.a
+tests/ssids/ssids.$(OBJEXT): libspral.la
+tests/ssids/kernels.$(OBJEXT): libspral.la
+examples/C/ssids.$(OBJEXT): libspral.la
 TESTS += ssids_test ssids_kernel_test
-spral_ssids_LDADD = $(LDADD) $(SPRAL_LINK_LIBS)
-ssids_test_LDADD = $(LDADD) $(SPRAL_LINK_LIBS)
-examples_Fortran_ssids_LDADD = $(LDADD) $(SPRAL_LINK_LIBS)
-examples_C_ssids_LDADD = $(LDADD) $(SPRAL_LINK_LIBS)
-spral_ssids_LINK = $(SPRALLINK)
-ssids_test_LINK = $(SPRALLINK)
-examples_Fortran_ssids_LINK = $(SPRALLINK)
-examples_C_ssids_LINK = $(SPRALLINK) $(NO_FORT_MAIN)
+spral_ssids_LDADD = libspral.la
+ssids_test_LDADD = libspral.la
+examples_Fortran_ssids_LDADD = libspral.la
+examples_C_ssids_LDADD = libspral.la
 
 # SSMFE
 include_HEADERS += include/spral_ssmfe.h
-libspral_a_SOURCES += \
+libspral_la_SOURCES += \
 	src/ssmfe/ssmfe.f90 \
 	src/ssmfe/core.f90 \
 	src/ssmfe/expert.f90 \
@@ -388,8 +384,8 @@
 ssmfe_ciface_test_SOURCES = tests/ssmfe/ssmfe_ciface.c \
 									 tests/ssmfe/laplace2d.h \
 									 tests/ssmfe/ldltf.h
-tests/ssmfe/ssmfe.$(OBJEXT): libspral.a
-tests/ssmfe/ssmfe_ciface.$(OBJEXT): libspral.a
+tests/ssmfe/ssmfe.$(OBJEXT): libspral.la
+tests/ssmfe/ssmfe_ciface.$(OBJEXT): libspral.la
 TESTS += ssmfe_test \
 			ssmfe_ciface_test
 examples_C_ssmfe_hermitian_SOURCES = \
@@ -422,19 +418,19 @@
 	examples/Fortran/ssmfe/shift_invert.f90 \
 	examples/Fortran/ssmfe/laplace2d.f90 \
 	examples/Fortran/ssmfe/ldltf.f90
-examples/C/ssmfe/hermitian.$(OBJEXT): libspral.a
-examples/C/ssmfe/precond_core.$(OBJEXT): libspral.a
-examples/C/ssmfe/precond_expert.$(OBJEXT): libspral.a
-examples/C/ssmfe/precond_ssmfe.$(OBJEXT): libspral.a
-examples/C/ssmfe/shift_invert.$(OBJEXT): libspral.a
-examples/Fortran/ssmfe/hermitian.$(OBJEXT): libspral.a
-examples/Fortran/ssmfe/precond_core.$(OBJEXT): libspral.a \
+examples/C/ssmfe/hermitian.$(OBJEXT): libspral.la
+examples/C/ssmfe/precond_core.$(OBJEXT): libspral.la
+examples/C/ssmfe/precond_expert.$(OBJEXT): libspral.la
+examples/C/ssmfe/precond_ssmfe.$(OBJEXT): libspral.la
+examples/C/ssmfe/shift_invert.$(OBJEXT): libspral.la
+examples/Fortran/ssmfe/hermitian.$(OBJEXT): libspral.la
+examples/Fortran/ssmfe/precond_core.$(OBJEXT): libspral.la \
    examples/Fortran/ssmfe/laplace2d.$(OBJEXT)
-examples/Fortran/ssmfe/precond_expert.$(OBJEXT): libspral.a \
+examples/Fortran/ssmfe/precond_expert.$(OBJEXT): libspral.la \
    examples/Fortran/ssmfe/laplace2d.$(OBJEXT)
-examples/Fortran/ssmfe/precond_ssmfe.$(OBJEXT): libspral.a \
+examples/Fortran/ssmfe/precond_ssmfe.$(OBJEXT): libspral.la \
    examples/Fortran/ssmfe/laplace2d.$(OBJEXT)
-examples/Fortran/ssmfe/shift_invert.$(OBJEXT): libspral.a \
+examples/Fortran/ssmfe/shift_invert.$(OBJEXT): libspral.la \
    examples/Fortran/ssmfe/laplace2d.$(OBJEXT) \
    examples/Fortran/ssmfe/ldltf.$(OBJEXT)
 
@@ -443,145 +439,144 @@
 	-rm *.mod
 
 # Fortran 90 dependencies
-driver/ssids_spral.$(OBJEXT): libspral.a
-src/match_order.$(OBJEXT): src/metis$(METIS_VERSION)_wrapper.$(OBJEXT) \
-                           src/scaling.$(OBJEXT)
-src/random_matrix.$(OBJEXT): src/random.$(OBJEXT)
-src/rutherford_boeing.$(OBJEXT): src/matrix_util.$(OBJEXT) \
-                                 src/random.$(OBJEXT)
-src/scaling.$(OBJEXT): src/matrix_util.$(OBJEXT)
-src/ssids/akeep.$(OBJEXT): src/ssids/datatypes.$(OBJEXT) \
-                           src/hw_topology/hw_topology.$(OBJEXT) \
-                           src/ssids/inform.$(OBJEXT) \
-									src/ssids/subtree.$(OBJEXT)
+src/match_order.lo: src/metis$(METIS_VERSION)_wrapper.lo \
+                           src/scaling.lo
+src/random_matrix.lo: src/random.lo
+src/rutherford_boeing.lo: src/matrix_util.lo \
+                                 src/random.lo
+src/scaling.lo: src/matrix_util.lo
+src/ssids/akeep.lo: src/ssids/datatypes.lo \
+                           src/hw_topology/hw_topology.lo \
+                           src/ssids/inform.lo \
+									src/ssids/subtree.lo
 if HAVE_NVCC
-src/ssids/anal.$(OBJEXT): src/core_analyse.$(OBJEXT) \
-                          src/cuda/cuda.$(OBJEXT) \
-                          src/hw_topology/hw_topology.$(OBJEXT) \
-                          src/pgm.$(OBJEXT) \
-                          src/ssids/akeep.$(OBJEXT) \
-                          src/ssids/datatypes.$(OBJEXT) \
-                          src/ssids/inform.$(OBJEXT) \
-                          src/ssids/cpu/subtree.$(OBJEXT) \
-                          src/ssids/gpu/subtree.$(OBJEXT)
+src/ssids/anal.lo: src/core_analyse.lo \
+                          src/cuda/cuda.lo \
+                          src/hw_topology/hw_topology.lo \
+                          src/pgm.lo \
+                          src/ssids/akeep.lo \
+                          src/ssids/datatypes.lo \
+                          src/ssids/inform.lo \
+                          src/ssids/cpu/subtree.lo \
+                          src/ssids/gpu/subtree.lo
 else
-src/ssids/anal.$(OBJEXT): src/core_analyse.$(OBJEXT) \
-                          src/cuda/cuda_nocuda.$(OBJEXT) \
-                          src/hw_topology/hw_topology.$(OBJEXT) \
-                          src/pgm.$(OBJEXT) \
-                          src/ssids/akeep.$(OBJEXT) \
-                          src/ssids/datatypes.$(OBJEXT) \
-                          src/ssids/inform.$(OBJEXT) \
-                          src/ssids/cpu/subtree.$(OBJEXT) \
-                          src/ssids/gpu/subtree_no_cuda.$(OBJEXT)
+src/ssids/anal.lo: src/core_analyse.lo \
+                          src/cuda/cuda_nocuda.lo \
+                          src/hw_topology/hw_topology.lo \
+                          src/pgm.lo \
+                          src/ssids/akeep.lo \
+                          src/ssids/datatypes.lo \
+                          src/ssids/inform.lo \
+                          src/ssids/cpu/subtree.lo \
+                          src/ssids/gpu/subtree_no_cuda.lo
 endif
-src/ssids/contrib.$(OBJEXT): src/ssids/datatypes.$(OBJEXT)
-src/ssids/datatypes.$(OBJEXT): src/scaling.$(OBJEXT)
-src/ssids/fkeep.$(OBJEXT): src/ssids/akeep.$(OBJEXT) \
-                           src/ssids/datatypes.$(OBJEXT) \
-                           src/ssids/inform.$(OBJEXT) \
-                           src/ssids/profile_iface.$(OBJEXT) \
-                           src/ssids/cpu/subtree.$(OBJEXT)
-src/ssids/inform.$(OBJEXT): src/scaling.$(OBJEXT) \
-                            src/ssids/datatypes.$(OBJEXT)
-src/ssids/subtree.$(OBJEXT): src/ssids/contrib.$(OBJEXT) \
-                             src/ssids/datatypes.$(OBJEXT) \
-									  src/ssids/inform.$(OBJEXT)
-src/ssids/cpu/cpu_iface.$(OBJEXT): src/ssids/datatypes.$(OBJEXT) \
-                                   src/ssids/inform.$(OBJEXT)
-src/ssids/cpu/subtree.$(OBJEXT): src/ssids/contrib.$(OBJEXT) \
-                                 src/ssids/datatypes.$(OBJEXT) \
-                                 src/ssids/inform.$(OBJEXT) \
-                                 src/ssids/subtree.$(OBJEXT) \
-                                 src/ssids/cpu/cpu_iface.$(OBJEXT)
-src/ssids/gpu/cpu_solve.$(OBJEXT): src/ssids/datatypes.$(OBJEXT)
-src/ssids/gpu/datatypes.$(OBJEXT): src/cuda/cuda.$(OBJEXT)
-src/ssids/gpu/interfaces.$(OBJEXT): src/ssids/gpu/datatypes.$(OBJEXT)
-src/ssids/gpu/dense_factor.$(OBJEXT): src/cuda/cuda.$(OBJEXT) \
-                                      src/ssids/gpu/alloc.$(OBJEXT) \
-                                      src/ssids/gpu/datatypes.$(OBJEXT) \
-                                      src/ssids/gpu/interfaces.$(OBJEXT) \
-                                      src/ssids/datatypes.$(OBJEXT)
-src/ssids/gpu/factor.$(OBJEXT): src/cuda/cuda.$(OBJEXT) \
-										  src/ssids/contrib.$(OBJEXT) \
-                                src/ssids/datatypes.$(OBJEXT) \
-                                src/ssids/profile_iface.$(OBJEXT) \
-                                src/ssids/gpu/alloc.$(OBJEXT) \
-                                src/ssids/gpu/datatypes.$(OBJEXT) \
-                                src/ssids/gpu/interfaces.$(OBJEXT) \
-                                src/ssids/gpu/dense_factor.$(OBJEXT) \
-                                src/ssids/gpu/solve.$(OBJEXT) \
-                                src/ssids/gpu/smalloc.$(OBJEXT)
-src/ssids/gpu/solve.$(OBJEXT): src/cuda/cuda.$(OBJEXT) \
-                               src/ssids/gpu/alloc.$(OBJEXT) \
-                               src/ssids/gpu/datatypes.$(OBJEXT) \
-                               src/ssids/gpu/interfaces.$(OBJEXT) \
-                               src/ssids/datatypes.$(OBJEXT)
-src/ssids/gpu/smalloc.$(OBJEXT): src/ssids/datatypes.$(OBJEXT)
-src/ssids/gpu/subtree.$(OBJEXT): src/cuda/cuda.$(OBJEXT) \
-                                 src/ssids/contrib.$(OBJEXT) \
-                                 src/ssids/datatypes.$(OBJEXT) \
-                                 src/ssids/inform.$(OBJEXT) \
-                                 src/ssids/subtree.$(OBJEXT) \
-                                 src/ssids/gpu/datatypes.$(OBJEXT) \
-                                 src/ssids/gpu/factor.$(OBJEXT) \
-                                 src/ssids/gpu/solve.$(OBJEXT) \
-                                 src/ssids/gpu/smalloc.$(OBJEXT)
-src/ssids/gpu/subtree_no_cuda.$(OBJEXT): src/ssids/contrib.$(OBJEXT) \
-                                         src/ssids/datatypes.$(OBJEXT) \
-                                         src/ssids/subtree.$(OBJEXT) \
-                                         src/ssids/inform.$(OBJEXT)
+src/ssids/contrib.lo: src/ssids/datatypes.lo
+src/ssids/datatypes.lo: src/scaling.lo
+src/ssids/fkeep.lo: src/ssids/akeep.lo \
+                           src/ssids/datatypes.lo \
+                           src/ssids/inform.lo \
+                           src/ssids/profile_iface.lo \
+                           src/ssids/cpu/subtree.lo
+src/ssids/inform.lo: src/scaling.lo \
+                            src/ssids/datatypes.lo
+src/ssids/subtree.lo: src/ssids/contrib.lo \
+                             src/ssids/datatypes.lo \
+									  src/ssids/inform.lo
+src/ssids/cpu/cpu_iface.lo: src/ssids/datatypes.lo \
+                                   src/ssids/inform.lo
+src/ssids/cpu/subtree.lo: src/ssids/contrib.lo \
+                                 src/ssids/datatypes.lo \
+                                 src/ssids/inform.lo \
+                                 src/ssids/subtree.lo \
+                                 src/ssids/cpu/cpu_iface.lo
+src/ssids/gpu/cpu_solve.lo: src/ssids/datatypes.lo
+src/ssids/gpu/datatypes.lo: src/cuda/cuda.lo
+src/ssids/gpu/interfaces.lo: src/ssids/gpu/datatypes.lo
+src/ssids/gpu/dense_factor.lo: src/cuda/cuda.lo \
+                                      src/ssids/gpu/alloc.lo \
+                                      src/ssids/gpu/datatypes.lo \
+                                      src/ssids/gpu/interfaces.lo \
+                                      src/ssids/datatypes.lo
+src/ssids/gpu/factor.lo: src/cuda/cuda.lo \
+										  src/ssids/contrib.lo \
+                                src/ssids/datatypes.lo \
+                                src/ssids/profile_iface.lo \
+                                src/ssids/gpu/alloc.lo \
+                                src/ssids/gpu/datatypes.lo \
+                                src/ssids/gpu/interfaces.lo \
+                                src/ssids/gpu/dense_factor.lo \
+                                src/ssids/gpu/solve.lo \
+                                src/ssids/gpu/smalloc.lo
+src/ssids/gpu/solve.lo: src/cuda/cuda.lo \
+                               src/ssids/gpu/alloc.lo \
+                               src/ssids/gpu/datatypes.lo \
+                               src/ssids/gpu/interfaces.lo \
+                               src/ssids/datatypes.lo
+src/ssids/gpu/smalloc.lo: src/ssids/datatypes.lo
+src/ssids/gpu/subtree.lo: src/cuda/cuda.lo \
+                                 src/ssids/contrib.lo \
+                                 src/ssids/datatypes.lo \
+                                 src/ssids/inform.lo \
+                                 src/ssids/subtree.lo \
+                                 src/ssids/gpu/datatypes.lo \
+                                 src/ssids/gpu/factor.lo \
+                                 src/ssids/gpu/solve.lo \
+                                 src/ssids/gpu/smalloc.lo
+src/ssids/gpu/subtree_no_cuda.lo: src/ssids/contrib.lo \
+                                         src/ssids/datatypes.lo \
+                                         src/ssids/subtree.lo \
+                                         src/ssids/inform.lo
 if HAVE_NVCC
-src/ssids/ssids.$(OBJEXT): src/match_order.$(OBJEXT) \
-                           src/matrix_util.$(OBJEXT) \
-                           src/metis$(METIS_VERSION)_wrapper.$(OBJEXT) \
-                           src/scaling.$(OBJEXT) \
-                           src/ssids/akeep.$(OBJEXT) \
-                           src/ssids/anal.$(OBJEXT) \
-                           src/ssids/datatypes.$(OBJEXT) \
-                           src/ssids/fkeep.$(OBJEXT) \
-                           src/ssids/inform.$(OBJEXT)
+src/ssids/ssids.lo: src/match_order.lo \
+                           src/matrix_util.lo \
+                           src/metis$(METIS_VERSION)_wrapper.lo \
+                           src/scaling.lo \
+                           src/ssids/akeep.lo \
+                           src/ssids/anal.lo \
+                           src/ssids/datatypes.lo \
+                           src/ssids/fkeep.lo \
+                           src/ssids/inform.lo
 else
-src/ssids/ssids.$(OBJEXT): src/hw_topology/hw_topology.$(OBJEXT) \
-                           src/match_order.$(OBJEXT) \
-                           src/matrix_util.$(OBJEXT) \
-                           src/metis$(METIS_VERSION)_wrapper.$(OBJEXT) \
-                           src/scaling.$(OBJEXT) \
-                           src/ssids/akeep.$(OBJEXT) \
-                           src/ssids/anal.$(OBJEXT) \
-                           src/ssids/datatypes.$(OBJEXT) \
-                           src/ssids/fkeep.$(OBJEXT) \
-                           src/ssids/inform.$(OBJEXT)
+src/ssids/ssids.lo: src/hw_topology/hw_topology.lo \
+                           src/match_order.lo \
+                           src/matrix_util.lo \
+                           src/metis$(METIS_VERSION)_wrapper.lo \
+                           src/scaling.lo \
+                           src/ssids/akeep.lo \
+                           src/ssids/anal.lo \
+                           src/ssids/datatypes.lo \
+                           src/ssids/fkeep.lo \
+                           src/ssids/inform.lo
 endif
-src/ssmfe/core.$(OBJEXT): src/blas_iface.$(OBJEXT) \
-                          src/lapack_iface.$(OBJEXT)
-src/ssmfe/expert.$(OBJEXT): src/ssmfe/core.$(OBJEXT)
-src/ssmfe/ssmfe.$(OBJEXT): src/ssmfe/expert.$(OBJEXT)
+src/ssmfe/core.lo: src/blas_iface.lo \
+                          src/lapack_iface.lo
+src/ssmfe/expert.lo: src/ssmfe/core.lo
+src/ssmfe/ssmfe.lo: src/ssmfe/expert.lo
 if HAVE_NVCC
-driver/spral_ssids.$(OBJEXT): libspral.a \
+driver/spral_ssids.$(OBJEXT): libspral.la \
    driver/cuda_helper_gpu.$(OBJEXT)
 else
-driver/spral_ssids.$(OBJEXT): libspral.a \
+driver/spral_ssids.$(OBJEXT): libspral.la \
    driver/cuda_helper_nogpu.$(OBJEXT)
 endif
 
 # CUDA header deps
-src/ssids/gpu/kernels/solve.$(OBJEXT): src/ssids/gpu/kernels/dtrsv.h
+src/ssids/gpu/kernels/solve.lo: src/ssids/gpu/kernels/dtrsv.h
 
 # C interface deps
-interfaces/C/random.$(OBJEXT): src/random.$(OBJEXT)
-interfaces/C/random_matrix.$(OBJEXT): src/random_matrix.$(OBJEXT)
-interfaces/C/rutherford_boeing.$(OBJEXT): src/rutherford_boeing.$(OBJEXT)
-interfaces/C/scaling.$(OBJEXT): src/scaling.$(OBJEXT)
+interfaces/C/random.lo: src/random.lo
+interfaces/C/random_matrix.lo: src/random_matrix.lo
+interfaces/C/rutherford_boeing.lo: src/rutherford_boeing.lo
+interfaces/C/scaling.lo: src/scaling.lo
 if HAVE_NVCC
-interfaces/C/ssids.$(OBJEXT): src/ssids/ssids.$(OBJEXT) \
-                              src/ssids/inform.$(OBJEXT)
+interfaces/C/ssids.lo: src/ssids/ssids.lo \
+	src/ssids/inform.lo
 else
-interfaces/C/ssids.$(OBJEXT): src/ssids/ssids.$(OBJEXT) \
-                              src/ssids/inform.$(OBJEXT)
+interfaces/C/ssids.lo: src/ssids/ssids.lo \
+	src/ssids/inform.lo
 endif
-interfaces/C/ssmfe.$(OBJEXT): src/ssmfe/ssmfe.$(OBJEXT) \
-                              interfaces/C/ssmfe_expert.$(OBJEXT)
-interfaces/C/ssmfe_core.$(OBJEXT): src/ssmfe/core.$(OBJEXT)
-interfaces/C/ssmfe_expert.$(OBJEXT): src/ssmfe/core.$(OBJEXT) \
-                                     interfaces/C/ssmfe_core.$(OBJEXT)
+interfaces/C/ssmfe.lo: src/ssmfe/ssmfe.lo \
+	interfaces/C/ssmfe_expert.lo
+interfaces/C/ssmfe_core.lo: src/ssmfe/core.lo
+interfaces/C/ssmfe_expert.lo: src/ssmfe/core.lo \
+	interfaces/C/ssmfe_core.lo
