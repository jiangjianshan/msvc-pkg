diff -urN magma-2.8.0-orig/CMakeLists.txt magma-2.8.0/CMakeLists.txt
--- magma-2.8.0-orig/CMakeLists.txt	2025-01-21 17:52:58.077860300 +0800
+++ magma-2.8.0/CMakeLists.txt	2025-01-22 08:37:08.625122100 +0800
@@ -649,42 +649,43 @@
 endif()
 add_custom_target( lib DEPENDS magma )
 
-
-# ----------------------------------------
-# compile lapacktest library
-# If use fortran, compile only Fortran files, not magma_[sdcz]_no_fortran.cpp
-# else,           compile only C++     files, not Fortran files
-if (USE_FORTRAN)
-    foreach( filename ${liblapacktest_all} )
-        if (filename MATCHES "\\.(f|f90|F90)$")
-            list( APPEND liblapacktest_all_f ${filename} )
-        endif()
-    endforeach()
-    add_library( lapacktest ${liblapacktest_all_f} )
-else()
-    # alternatively, use only C/C++/CUDA files, including magma_[sdcz]_no_fortran.cpp
-    foreach( filename ${liblapacktest_all} )
-        if (filename MATCHES "\\.(c|cu|cpp)$")
-            list( APPEND liblapacktest_all_cpp ${filename} )
-        endif()
-    endforeach()
-    add_library( lapacktest ${liblapacktest_all_cpp} )
-endif()
-target_link_libraries( lapacktest
-    ${blas_fix}
-    ${LAPACK_LIBRARIES}
-)
+if (ENABLE_MAGMA_TESTS)
+    # ----------------------------------------
+    # compile lapacktest library
+    # If use fortran, compile only Fortran files, not magma_[sdcz]_no_fortran.cpp
+    # else,           compile only C++     files, not Fortran files
+    if (USE_FORTRAN)
+        foreach( filename ${liblapacktest_all} )
+            if (filename MATCHES "\\.(f|f90|F90)$")
+                list( APPEND liblapacktest_all_f ${filename} )
+            endif()
+        endforeach()
+        add_library( lapacktest ${liblapacktest_all_f} )
+    else()
+        # alternatively, use only C/C++/CUDA files, including magma_[sdcz]_no_fortran.cpp
+        foreach( filename ${liblapacktest_all} )
+            if (filename MATCHES "\\.(c|cu|cpp)$")
+                list( APPEND liblapacktest_all_cpp ${filename} )
+            endif()
+        endforeach()
+        add_library( lapacktest ${liblapacktest_all_cpp} )
+    endif()
+    target_link_libraries( lapacktest
+        ${blas_fix}
+        ${LAPACK_LIBRARIES}
+    )
 
 
-# ----------------------------------------
-# compile tester library
-add_library( tester ${libtest_all} )
-target_link_libraries( tester
-    magma
-    lapacktest
-    ${blas_fix}
-    ${LAPACK_LIBRARIES}
-)
+    # ----------------------------------------
+    # compile tester library
+    add_library( tester ${libtest_all} )
+    target_link_libraries( tester
+        magma
+        lapacktest
+        ${blas_fix}
+        ${LAPACK_LIBRARIES}
+    )
+endif()
 
 
 # ----------------------------------------
@@ -725,54 +726,56 @@
 endif()
 add_custom_target( sparse-lib DEPENDS magma_sparse )
 
+option( MAGMA_ENABLE_TESTS "Enable build each tester and sparse tester" OFF )
+if (MAGMA_ENABLE_TESTS)
+    # ----------------------------------------
+    # compile each tester
+
+    # save testers to testing/
+    # save tester lib files to testing_lib/ to avoid cluttering lib/
+    set( CMAKE_RUNTIME_OUTPUT_DIRECTORY testing )
+    set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY testing_lib )
+    set( CMAKE_LIBRARY_OUTPUT_DIRECTORY testing_lib )
 
-# ----------------------------------------
-# compile each tester
-
-# save testers to testing/
-# save tester lib files to testing_lib/ to avoid cluttering lib/
-set( CMAKE_RUNTIME_OUTPUT_DIRECTORY testing )
-set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY testing_lib )
-set( CMAKE_LIBRARY_OUTPUT_DIRECTORY testing_lib )
-
-# skip Fortran testers, which require an extra file from CUDA
-foreach( filename ${testing_all} )
-    if (filename MATCHES "\\.(c|cu|cpp)$")
-        list( APPEND testing_all_cpp ${filename} )
-    endif()
-endforeach()
-foreach( TEST ${testing_all_cpp} )
-    string( REGEX REPLACE "\\.(cpp|f90|F90)" "" EXE ${TEST} )
-    string( REGEX REPLACE "testing/" "" EXE ${EXE} )
-    #message( "${TEST} --> ${EXE}" )
-    add_executable( ${EXE} ${TEST} )
-    target_link_libraries( ${EXE} tester lapacktest magma )
-    list( APPEND testing ${EXE} )
-endforeach()
-add_custom_target( testing DEPENDS ${testing} )
+    # skip Fortran testers, which require an extra file from CUDA
+    foreach( filename ${testing_all} )
+        if (filename MATCHES "\\.(c|cu|cpp)$")
+            list( APPEND testing_all_cpp ${filename} )
+        endif()
+    endforeach()
+    foreach( TEST ${testing_all_cpp} )
+        string( REGEX REPLACE "\\.(cpp|f90|F90)" "" EXE ${TEST} )
+        string( REGEX REPLACE "testing/" "" EXE ${EXE} )
+        #message( "${TEST} --> ${EXE}" )
+        add_executable( ${EXE} ${TEST} )
+        target_link_libraries( ${EXE} tester lapacktest magma )
+        list( APPEND testing ${EXE} )
+    endforeach()
+    add_custom_target( testing DEPENDS ${testing} )
 
 
-# ----------------------------------------
-# compile each sparse tester
+    # ----------------------------------------
+    # compile each sparse tester
 
-if (MAGMA_ENABLE_CUDA)
-  set(SPARSE_TEST_DIR "sparse/testing")
-else()
-  set(SPARSE_TEST_DIR "sparse_hip/testing")
-endif()
+    if (MAGMA_ENABLE_CUDA)
+    set(SPARSE_TEST_DIR "sparse/testing")
+    else()
+    set(SPARSE_TEST_DIR "sparse_hip/testing")
+    endif()
 
 
-set( CMAKE_RUNTIME_OUTPUT_DIRECTORY "${SPARSE_TEST_DIR}" )
-cmake_policy( SET CMP0037 OLD)
-foreach( TEST ${sparse_testing_all} )
-    string( REGEX REPLACE "\\.(cpp|f90|F90)"     "" EXE ${TEST} )
-    string( REGEX REPLACE "${SPARSE_TEST_DIR}/" "" EXE ${EXE} )
-    #message( "${TEST} --> ${EXE}" )
-    add_executable( ${EXE} ${TEST} )
-    target_link_libraries( ${EXE} magma_sparse magma )
-    list( APPEND sparse-testing ${EXE} )
-endforeach()
-add_custom_target( sparse-testing DEPENDS ${sparse-testing} )
+    set( CMAKE_RUNTIME_OUTPUT_DIRECTORY "${SPARSE_TEST_DIR}" )
+    cmake_policy( SET CMP0037 OLD)
+    foreach( TEST ${sparse_testing_all} )
+        string( REGEX REPLACE "\\.(cpp|f90|F90)"     "" EXE ${TEST} )
+        string( REGEX REPLACE "${SPARSE_TEST_DIR}/" "" EXE ${EXE} )
+        #message( "${TEST} --> ${EXE}" )
+        add_executable( ${EXE} ${TEST} )
+        target_link_libraries( ${EXE} magma_sparse magma )
+        list( APPEND sparse-testing ${EXE} )
+    endforeach()
+    add_custom_target( sparse-testing DEPENDS ${sparse-testing} )
+endif()
 
 
 # ----------------------------------------
